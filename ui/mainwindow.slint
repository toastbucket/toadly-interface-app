component BatteryLevel inherits Rectangle {
    background: transparent;
    height: self.width * 0.667;

    in property <float> level: 100%;
    in property <float> voltage: 13.5;
    in property <bool> show-voltage: false;

    left_receptacle := Rectangle {
        background: gray;
        x: parent.width * 10%;
        y: 0px;
        width: parent.width * 0.1;
        height: self.width / 2;
        border-top-right-radius: 2px;
        border-top-left-radius: 2px;
    }

    right_receptacle := Rectangle {
        background: gray;
        x: (parent.width * 90%) - self.width;
        y: 0px;
        width: parent.width * 0.1;
        height: self.width / 2;
        border-top-right-radius: 2px;
        border-top-left-radius: 2px;
    }

    Rectangle {
        background: gray;
        y: left_receptacle.height;
        height: parent.height - left_receptacle.height;
        border-radius: 2px;

        if !show-voltage : Rectangle {
            y: parent.height - self.height;
            width: parent.width;
            height: parent.height * level;
            border-radius: parent.border-radius;

            states [
                good when level > 40%: {
                    background: mediumaquamarine;
                }
                ok when level > 20%: {
                    background: gold;
                }
                low when level < 20%: {
                    background: firebrick;
                }
            ]
        }
    }

    Text {
        text: show-voltage ? "\{round(voltage)}V" : "\{round(level * 100)}%";
        font-size: 22px;
        font-weight: 650;
    }
}

component WaterLevel inherits VerticalLayout {
    alignment: stretch;
    spacing: 5px;

    in property <float> level: 100%;
    in property <bool> good-when-full: true;
    in property <string> label: "Tank Level";

    Text {
        text: label;
        font-size: 18px;
        horizontal-alignment: center;
        max-height: self.font-size;
    }

    Rectangle {
        background: gray;
        border-radius: 4px;

        Rectangle {
            y: parent.height - self.height;
            width: parent.width;
            height: parent.height * level;
            border-radius: parent.border-radius;

            states [
                full when level > 40%: {
                    background: good-when-full ? cornflowerblue : firebrick;
                }
                ok when level > 20%: {
                    background: gold;
                }
                empty when level < 20%: {
                    background: good-when-full ? firebrick : cornflowerblue;
                }
            ]
        }

        Text {
            text: "\{round(level * 100)}%";
            font-size: 22px;
            font-weight: 650;
        }
    }
}

export component MainWindow inherits Window {
    title: "Toadly Interface";
    width: 800px;
    height: 480px;

    in property <float> fresh_tank_level: 100%;
    in property <float> grey_tank_level: 100%;
    in property <float> house_batt_level: 100%;
    in property <float> truck_batt_voltage: 13.5;

    HorizontalLayout {
        padding: 15px;
        spacing: 10px;

        GridLayout {
            padding: 15px;
            spacing: 10px;

            Row {
                Rectangle {}
                BatteryLevel {
                    width: 180px;
                    level: house_batt_level;
                }
                Rectangle {}
            }

            Row {
                Rectangle {}
                BatteryLevel {
                    width: 100px;
                    voltage: truck_batt_voltage;
                    show-voltage: true;
                }
                Rectangle {}
            }
        }

        Rectangle {}

        WaterLevel {
            height: parent.height - (parent.padding * 2);
            width: self.height * 0.4;
            level: grey_tank_level;
            good-when-full: false;
            label: "Grey Water Level";
        }

        WaterLevel {
            height: parent.height - (parent.padding * 2);
            width: self.height * 0.4;
            level: fresh_tank_level;
            label: "Fresh Water Level";
        }
   }
}
